# Шаг 1: Базовый образ
FROM node:22-alpine AS base
WORKDIR /app

# Устанавливаем PNPM
RUN corepack enable && corepack prepare pnpm@latest --activate

# Копируем lock-файлы для кеширования зависимостей
COPY pnpm-lock.yaml pnpm-workspace.yaml package.json ./
COPY packages/render-core/package.json packages/render-core/
COPY packages/render-react/package.json packages/render-react/
COPY packages/definition/package.json packages/definition/
COPY packages/utils/package.json packages/utils/
COPY apps/web-next/package.json apps/web-next/

# Устанавливаем зависимости (включая dev-зависимости)
RUN pnpm install --frozen-lockfile --shamefully-hoist

# Шаг 2: Билд
FROM base AS builder
WORKDIR /app
ENV NODE_OPTIONS="--max-old-space-size=8192"

RUN node -e "console.log('V8 memory limit:', require('v8').getHeapStatistics().heap_size_limit / 1024 / 1024 + 'MB')"

# Копируем весь проект
COPY . .

# Собираем проект
RUN pnpm build

# Шаг 3: Запуск
FROM node:22-alpine AS runner
WORKDIR /app

ENV NODE_ENV production

# Устанавливаем PNPM
#RUN corepack enable && corepack prepare pnpm@latest --activate

# Копируем только необходимые файлы из builder
COPY --from=builder /app/apps/web-next/.next/standalone ./standalone
COPY --from=builder /app/apps/web-next/.next/static ./standalone/apps/web-next/.next/static

#COPY --from=builder /app/apps/web-next/.next/standalone/apps/web-next ./apps/web-next
#COPY --from=builder /app/apps/web-next/.next/static ./.next/static
#COPY --from=builder /app/apps/web-next/.next/server ./.next/server
#COPY --from=builder /app/node_modules ./node_modules

COPY --from=builder /app/packages/render-core/dist ./packages/render-core/dist
COPY --from=builder /app/packages/render-react/dist ./packages/render-react/dist
COPY --from=builder /app/packages/definition/dist ./packages/definition/dist
COPY --from=builder /app/packages/utils/dist ./packages/utils/dist

# Порт
EXPOSE 3000

WORKDIR /app/standalone/apps/web-next

CMD ["node", "server.js"]

#RUN ls -la

# Запуск
#CMD ["tail", "-f", "/dev/null"]

#CMD ["node", "standalone/server.js"]

#
## Для standalone:
#CMD ["node", "apps/web-next/.next/standalone/apps/web-next/server.js"]
## Для обычного режима:
#CMD ["pnpm", "--filter", "@fragmentsx/web-next", "start"]
