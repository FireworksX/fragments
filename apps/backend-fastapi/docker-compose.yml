version: "3.4"

networks:
  default:

services:
  nginx:
    build:
      context: nginx
    container_name: backend-fastapi-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./.docker_data/media:${MEDIA_STORAGE_PATH}
      - ./.docker_data/media/avatars:${MEDIA_STORAGE_PATH}/avatars
      - ./.docker_data/media/projects:${MEDIA_STORAGE_PATH}/projects
    depends_on:
      - core
    networks:
      - default
    env_file: .env
  core: &service
    container_name: backend-fastapi-core
    environment:
      - RUN_LEVEL=dev
      - MEDIA_STORAGE_PATH=${MEDIA_STORAGE_PATH}
    entrypoint:
      - uvicorn
      - services.core:app
      - --host=0.0.0.0
      - --reload
    build:
      context: service
      dockerfile: deployment/docker/Dockerfile.server
      target: base
      args:
        RUN_LEVEL: dev
    volumes:
      - ./service:/opt/app
      - ./.docker_data/media:${MEDIA_STORAGE_PATH}
      - ./.docker_data/media/avatars:${MEDIA_STORAGE_PATH}/avatars
      - ./.docker_data/media/projects:${MEDIA_STORAGE_PATH}/projects
    networks:
      - default
    restart: unless-stopped
    env_file: .env
  postgres:
    container_name: backend-fastapi-postgres
    image: library/postgres:13
    ports:
      - "5432:5432"
    networks:
      - default
    volumes:
      - ./.docker_data/postgres:/var/lib/postgresql/data
    env_file:
      - .env
  pgadmin:
    container_name: backend-fastapi-pgadmin
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - postgres
    ports:
      - "5050:80"
    volumes:
      - ./.docker_data/pg_admin:/var/lib/pgadmin
    env_file:
      - .env