networks:
  default:

volumes:
  pg_data:               # Named volume for Postgres data
  pgadmin_data:          # Named volume for pgAdmin data
  media_data:            # Named volume for media files
  avatars_data:          # Named volume for avatars
  projects_data:         # Named volume for projects
  fragments_data:        # Named volume for fragments
  portainer_data:        # Named volume for Portainer data

services:
  # frontend
  frontend:
    build:
      context: .
      dockerfile: deployment/docker/Dockerfile.front
    environment:
      - NODE_ENV=production
    env_file: .env
    depends_on:
      - core
    restart: unless-stopped

  # backend
  nginx:
    build:
      context: deployment/docker/nginx
      dockerfile: Dockerfile
    container_name: backend-nginx
    ports:
      - "80:80"
    volumes:
      - ./deployment/docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - media_data:${MEDIA_STORAGE_PATH}
      - avatars_data:${MEDIA_STORAGE_PATH}/avatars
      - projects_data:${MEDIA_STORAGE_PATH}/projects
      - fragments_data:${MEDIA_STORAGE_PATH}/fragments
    depends_on:
      - frontend
    networks:
      - default
    env_file: .env

  core:
    container_name: backend-core
    environment:
      - RUN_LEVEL=dev
      - MEDIA_STORAGE_PATH=${MEDIA_STORAGE_PATH}
    entrypoint:
      - uvicorn
      - services.core:app
      - --host=0.0.0.0
      - --reload
    build:
      context: apps/backend/service
      dockerfile: deployment/docker/Dockerfile.server
      target: base
      args:
        RUN_LEVEL: dev
    volumes:
      - ./apps/backend/service:/opt/app
      - media_data:${MEDIA_STORAGE_PATH}
      - avatars_data:${MEDIA_STORAGE_PATH}/avatars
      - projects_data:${MEDIA_STORAGE_PATH}/projects
      - fragments_data:${MEDIA_STORAGE_PATH}/fragments
    networks:
      - default
    restart: unless-stopped
    env_file: .env

  postgres:
    container_name: backend-postgres
    image: library/postgres:13
    ports:
      - "5432:5432"
    networks:
      - default
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - .env

  pgadmin:
    container_name: backend-pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    env_file:
      - .env

  portainer:
    image: portainer/portainer-ce:latest
    container_name: backend-portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
    ports:
      - 9000:9000
